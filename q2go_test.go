package main

import "testing"

func TestInitialize(t *testing.T) {

	initialize()

	if queueMap == nil {
		t.Errorf("No queue map existing")
	}

	if router == nil {
		t.Errorf("No router created")
	}

	route := router.Get("pop")
	if route == nil {
		t.Errorf("No route created for pop")
	}

	route = router.Get("push")
	if route == nil {
		t.Errorf("No route created for push")
	}

	route = router.Get("createQueue")
	if route == nil {
		t.Errorf("No route created for createQueue")
	}

}

func TestGetQueueMap(t *testing.T) {

	initialize()

	createQueue(queueMap, "tq1")
	if len(queueMap) == 0 {
		t.Error("queueMap has zero length")
	}

	createQueue(queueMap, "tq2")
	if len(queueMap) != 2 {
		t.Error("queueMap has not length of two")
	}

}

func TestCreateQueueByName(t *testing.T) {

	initialize()

	qname := "tq"
	q := createQueue(queueMap, qname)
	if q == nil {
		t.Errorf("no queue generated by name %s", qname)
	}

}

func TestPushMessage(t *testing.T) {

	initialize()

	m := "test message"
	qname := "tq"
	q := createQueue(queueMap, qname)
	pushMessage(q, m)
	if q.Len() == 0 {
		t.Errorf("No message pushed in queue")
	}
}

func TestPopMessage(t *testing.T) {

	initialize()
	m := "test message"
	qname := "tq"
	q := createQueue(queueMap, qname)
	pushMessage(q, m)

	mg := popMessage(qname)
	if mg != "test message" {
		t.Errorf("No message popped from queue")
	}

}
